machine "Annotation System Examples"

// Abstract base class
task BaseProcessor @Abstract {
    desc: "Base processor that all processors must extend";
    version<string>: "1.0.0";
}

// Singleton pattern
task ConfigManager @Singleton {
    desc: "Manages application configuration";
    configPath<string>: "/etc/app/config.json";
}

// Deprecated node
task LegacyAPI @Deprecated("Use ModernAPI instead - will be removed in v2.0") {
    desc: "Old API endpoint - do not use in new code";
    endpoint<string>: "/api/v1/legacy";
}

// Modern replacement
task ModernAPI {
    desc: "New API endpoint with better performance";
    endpoint<string>: "/api/v2/modern";
}

// Critical business logic
task PaymentProcessor @Critical @Async {
    desc: "Processes payments - requires high availability";
    timeout<number>: 30000;
    retries<number>: 5;
}

// Multiple annotations showing different aspects
task DataValidator @Abstract @Critical {
    desc: "Validates critical data before processing";
}

// Concrete implementations
task JSONValidator @Singleton {
    desc: "Validates JSON data";
    schema<string>: "schema.json";
}

task XMLValidator @Deprecated("Use JSONValidator instead") {
    desc: "Validates XML data - legacy system";
}

// Inheritance relationships
BaseProcessor <|-- DataValidator;
DataValidator <|-- JSONValidator;
DataValidator <|-- XMLValidator;

// Async task workflow
task FetchData @Async {
    desc: "Asynchronously fetches data from external source";
    url<string>: "https://api.example.com/data";
}

task ProcessData @Async @Critical {
    desc: "Processes fetched data asynchronously";
}

task StoreData @Critical {
    desc: "Stores processed data in database";
}

// Workflow
FetchData -> ProcessData;
ProcessData -> StoreData;

// Configuration dependency
ConfigManager --> PaymentProcessor;
ConfigManager --> FetchData;
