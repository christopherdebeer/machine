machine "Tool Creation Example"

// Demonstrates dynamic tool construction with loosely defined Tool nodes
// When meta: true is enabled, the agent can build out tool definitions

// A loosely defined tool - just has a name and basic description
Tool sentiment_analyzer {
    description: "Analyze sentiment of text and return score";
}

// A more complete tool with input schema but no implementation
Tool data_transformer {
    description: "Transform data from one format to another";
    input_schema: '{"type": "object", "properties": {"data": {"type": "string"}, "target_format": {"type": "string"}}}';
}

// Task with meta capability to build out tools
Task builder {
    meta: true;
    prompt: "Inspect the tool nodes (sentiment_analyzer and data_transformer). For each tool, use construct_tool to register them with complete input_schema, output_schema, and an implementation strategy. For sentiment_analyzer, use 'agent_backed' strategy. For data_transformer, use 'code_generation' strategy with sample JavaScript code.";
}

// Task that will use the tools after they are built
Task processor {
    prompt: "Use the sentiment_analyzer tool to analyze: 'This is a great product!'. Then use data_transformer to convert some sample JSON to YAML format.";
}

State complete {
    desc: "Processing complete";
}

// Workflow
builder -uses-> sentiment_analyzer, data_transformer;
builder -> processor;
processor -> complete;
