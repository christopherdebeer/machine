machine "Automated Transitions Demo"

// This example demonstrates automatic transitions that execute
// without invoking the agent, improving efficiency.

// Context for metrics
context metrics {
    errorCount<number>: 0;
    processingTime<number>: 0;
    quality<number>: 0.0;
};

// State nodes (automatically transition)
State idle;
State initializing;
State ready;
State error;
State complete;

// Task nodes (require agent decisions)
Task process {
    prompt: "Process the data and update metrics";
};

Task handleError {
    prompt: "Diagnose and handle the error";
};

// Automatic transitions
// 1. State nodes always auto-transition if they have single outbound edge
idle -> initializing;
initializing -> ready;

// 2. Simple conditions auto-evaluate without agent
ready -> process;  // Agent decides when to start processing

process -reads-> metrics;
process -writes-> metrics;

// 3. Agent decides what to do based on metrics
// The agent can transition to handleError, complete, or retry (back to process)
process -> handleError, complete;

handleError -reads-> metrics;
handleError -writes-> metrics;

// Agent decides: retry or give up
handleError -> process, error;

// Terminal states
error -> idle;      // Restart after error
complete -> idle;   // Restart after completion

// Execution flow:
// 1. idle → initializing → ready: Automatic (state nodes)
// 2. ready → process: Agent-controlled (decides when ready)
// 3. process: Agent processes data, updates metrics
// 4. process → handleError|complete|process: Automatic (conditions)
// 5. handleError: Agent decides retry or give up
// 6. error|complete → idle: Automatic (restart)
