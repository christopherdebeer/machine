machine "Phase-Specific Context Demo"

// This example demonstrates how agents receive only relevant
// context at each node, based on edge permissions.

// Context nodes
context userInput {
    query<string>: "What is the weather today?";
    userId<string>: "user123";
};

context sessionData {
    history<string>: "[]";
    preferences<string>: "{}";
};

context apiCredentials {
    weatherApiKey<string>: "secret-key";
    openaiApiKey<string>: "secret-key";
};

context results {
    weatherData<string>: "{}";
    response<string>: "";
};

// State machine
State idle;
State complete;

// Tasks with different context permissions
Task parseQuery {
    prompt: "Parse the user query and extract intent";
};

Task fetchWeather {
    prompt: "Fetch weather data from API";
};

Task generateResponse {
    prompt: "Generate a natural language response";
};

// Flow with explicit permissions
idle -> parseQuery;

// parseQuery: Can read user input and session data
parseQuery -reads-> userInput;
parseQuery -reads-> sessionData;
parseQuery -> fetchWeather;

// fetchWeather: Can read query, access API credentials, write results
fetchWeather -read, query-> userInput;           // Field-level: only query field
fetchWeather -reads-> apiCredentials;            // Full access to credentials
fetchWeather -writes-> results;                  // Can write results
fetchWeather -> generateResponse;

// generateResponse: Can read results and session, write final response
generateResponse -reads-> results;
generateResponse -reads-> sessionData;
generateResponse -write, response-> results;     // Field-level: only response field
generateResponse -> complete;

complete -> idle;

// Phase-specific context in action:
//
// At parseQuery:
//   Available Context:
//   - userInput: read (query, userId)
//   - sessionData: read (history, preferences)
//   Available Tools:
//   - read_userInput(field?)
//   - read_sessionData(field?)
//   - transition_to_fetchWeather(reason?)
//
// At fetchWeather:
//   Available Context:
//   - userInput: read (query only)
//   - apiCredentials: read (weatherApiKey, openaiApiKey)
//   - results: write (weatherData, response)
//   Available Tools:
//   - read_userInput(field?) -- limited to 'query'
//   - read_apiCredentials(field?)
//   - write_results(field, value)
//   - transition_to_generateResponse(reason?)
//
// At generateResponse:
//   Available Context:
//   - results: read (weatherData, response)
//   - sessionData: read (history, preferences)
//   - results: write (response only)
//   Available Tools:
//   - read_results(field?)
//   - read_sessionData(field?)
//   - write_results(field, value) -- limited to 'response'
//   - transition_to_complete(reason?)
//
// Notice: apiCredentials are NOT visible to parseQuery or generateResponse
// This demonstrates security through permission-based context access
