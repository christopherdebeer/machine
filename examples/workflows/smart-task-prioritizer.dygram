machine "Smart Task Prioritization System"

// A practical workflow that analyzes and prioritizes tasks using AI

state start;

Task analyze_tasks {
    meta: true;
    prompt: "You are helping prioritize a list of tasks. Here are the tasks: 1) Fix critical security bug, 2) Write documentation, 3) Implement new feature, 4) Code review. Analyze these tasks and use set_context_value to store a prioritized list in the 'analysis' context node with key 'prioritizedTasks' as a JSON string containing an array of objects with fields: task, priority (1-4), reasoning.";
};

context analysis {
    prioritizedTasks<string>: "[]";
    analysisDate<string>: "";
};

Task generate_action_plan {
    meta: true;
    prompt: "Read the prioritized tasks from 'analysis' context using get_context_value. Create a detailed action plan for the top 2 priority tasks. Use set_context_value to store the action plan in 'action_plan' context with key 'plan' as a string with clear steps for each task.";
};

context action_plan {
    plan<string>: "";
    estimatedTime<string>: "";
};

Task finalize {
    meta: true;
    prompt: "Read the action plan from 'action_plan' context. Summarize the workflow completion and use the transition tool to move to 'complete' state.";
};

state complete {
    desc: "Task prioritization workflow completed";
};

// Workflow
start -> analyze_tasks;
analyze_tasks -analyzed-> analysis;
analysis -> generate_action_plan;
generate_action_plan -planned-> action_plan;
action_plan -> finalize;
finalize -> complete;
