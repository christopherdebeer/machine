{
  "json": {
    "title": "Phase 4: Semantic Validation Examples",
    "attributes": [],
    "nodes": [
      {
        "name": "start",
        "type": "init",
        "attributes": [
          {
            "name": "desc",
            "value": "Proper init node with transitions"
          }
        ]
      },
      {
        "name": "processData",
        "type": "task",
        "attributes": [
          {
            "name": "desc",
            "value": "Asynchronous data processing"
          },
          {
            "name": "timeout",
            "type": "number",
            "value": 5000
          }
        ],
        "annotations": [
          {
            "name": "Async"
          }
        ]
      },
      {
        "name": "transformData",
        "type": "task",
        "attributes": [
          {
            "name": "desc",
            "value": "Transform data synchronously"
          }
        ]
      },
      {
        "name": "DataReady",
        "type": "state",
        "attributes": [
          {
            "name": "desc",
            "value": "Data is ready for next step"
          }
        ]
      },
      {
        "name": "Complete",
        "type": "state",
        "attributes": [
          {
            "name": "desc",
            "value": "Process completed successfully"
          }
        ]
      },
      {
        "name": "appConfig",
        "type": "context",
        "attributes": [
          {
            "name": "apiUrl",
            "type": "string",
            "value": "https://api.example.com"
          },
          {
            "name": "debug",
            "type": "boolean",
            "value": false
          }
        ],
        "annotations": [
          {
            "name": "Singleton"
          }
        ]
      },
      {
        "name": "BaseProcessor",
        "type": "task",
        "attributes": [
          {
            "name": "desc",
            "value": "Base processor class"
          },
          {
            "name": "version",
            "type": "string",
            "value": 1
          }
        ],
        "annotations": [
          {
            "name": "Abstract"
          }
        ]
      },
      {
        "name": "DatabaseService",
        "type": "task",
        "attributes": [
          {
            "name": "desc",
            "value": "Database connection service"
          }
        ],
        "annotations": [
          {
            "name": "Singleton"
          }
        ]
      },
      {
        "name": "serviceConfig",
        "type": "context",
        "attributes": [
          {
            "name": "connectionString",
            "type": "string",
            "value": "localhost:5432"
          }
        ],
        "annotations": [
          {
            "name": "Singleton"
          }
        ]
      },
      {
        "name": "fetchFromAPI",
        "type": "task",
        "attributes": [
          {
            "name": "desc",
            "value": "Fetches data from external API"
          },
          {
            "name": "endpoint",
            "type": "string",
            "value": "{{ appConfig.apiUrl }}"
          }
        ],
        "annotations": [
          {
            "name": "Async"
          }
        ]
      },
      {
        "name": "validatePayment",
        "type": "task",
        "attributes": [
          {
            "name": "desc",
            "value": "Critical payment validation step"
          }
        ],
        "annotations": [
          {
            "name": "Critical"
          }
        ]
      },
      {
        "name": "oldProcessor",
        "type": "task",
        "attributes": [
          {
            "name": "desc",
            "value": "Legacy processor - do not use"
          }
        ],
        "annotations": [
          {
            "name": "Deprecated",
            "value": "Use transformData instead"
          }
        ]
      },
      {
        "name": "SpecificProcessor",
        "type": "task",
        "attributes": [
          {
            "name": "desc",
            "value": "Concrete implementation"
          }
        ]
      },
      {
        "name": "useConfig",
        "type": "task",
        "attributes": [
          {
            "name": "apiCall",
            "type": "string",
            "value": "Call {{ appConfig.apiUrl }}"
          },
          {
            "name": "debugMode",
            "type": "boolean",
            "value": false
          }
        ]
      }
    ],
    "edges": [
      {
        "source": "BaseProcessor",
        "target": "SpecificProcessor",
        "arrowType": "<|--"
      },
      {
        "source": "start",
        "target": "processData",
        "arrowType": "->"
      },
      {
        "source": "processData",
        "target": "DataReady",
        "arrowType": "->"
      },
      {
        "source": "DataReady",
        "target": "transformData",
        "arrowType": "->"
      },
      {
        "source": "transformData",
        "target": "Complete",
        "arrowType": "->"
      }
    ],
    "notes": [],
    "inferredDependencies": [
      {
        "source": "fetchFromAPI",
        "target": "appConfig",
        "reason": "reads endpoint",
        "path": "appConfig.apiUrl"
      },
      {
        "source": "useConfig",
        "target": "appConfig",
        "reason": "reads apiCall",
        "path": "appConfig.apiUrl"
      }
    ]
  },
  "graphviz": "digraph {\n  // Graph attributes\n  label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"center\"><font point-size=\"12\"><b>Phase 4: Semantic Validation Examples</b></font></td></tr></table>>;\n  labelloc=\"t\";\n  fontsize=10;\n  fontname=\"Arial\";\n  compound=true;\n  rankdir=TB;\n  pad=0.25;\n  node [fontname=\"Arial\", fontsize=10];\n  edge [fontname=\"Arial\", fontsize=9];\n\n  // Node definitions with nested namespaces\n  \"start\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>start</b> <i>&lt;init&gt;</i></td></tr><tr><td align=\"left\">Proper init node with transitions</td></tr></table>>, shape=ellipse, fillcolor=\"#FFF3E0\", style=filled, color=\"#F57C00\"];\n  \"processData\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>processData</b> <i>&lt;task&gt;</i> <i>@Async</i></td></tr><tr><td align=\"left\">Asynchronous data processing</td></tr><tr><td><table border=\"0\" cellborder=\"1\" cellspacing=\"0\" cellpadding=\"2\" align=\"left\"><tr><td port=\"timeout__key\" align=\"left\" balign=\"left\">timeout : number</td><td port=\"timeout__value\" align=\"left\" balign=\"left\">5000</td></tr></table></td></tr></table>>, shape=box, fillcolor=\"#E3F2FD\", style=filled, color=\"#1976D2\"];\n  \"transformData\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>transformData</b> <i>&lt;task&gt;</i></td></tr><tr><td align=\"left\">Transform data synchronously</td></tr></table>>, shape=box, fillcolor=\"#E3F2FD\", style=filled, color=\"#1976D2\"];\n  \"DataReady\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>DataReady</b> <i>&lt;state&gt;</i></td></tr><tr><td align=\"left\">Data is ready for next step</td></tr></table>>, shape=diamond, fillcolor=\"#F3E5F5\", style=filled, color=\"#7B1FA2\"];\n  \"Complete\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>Complete</b> <i>&lt;state&gt;</i></td></tr><tr><td align=\"left\">Process completed successfully</td></tr></table>>, shape=diamond, fillcolor=\"#F3E5F5\", style=filled, color=\"#7B1FA2\"];\n  \"appConfig\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>appConfig</b> <i>&lt;context&gt;</i> <i>@Singleton</i></td></tr><tr><td><table border=\"0\" cellborder=\"1\" cellspacing=\"0\" cellpadding=\"2\" align=\"left\"><tr><td port=\"apiUrl__key\" align=\"left\" balign=\"left\">apiUrl : string</td><td port=\"apiUrl__value\" align=\"left\" balign=\"left\">https://api.example.com</td></tr><tr><td port=\"debug__key\" align=\"left\" balign=\"left\">debug : boolean</td><td port=\"debug__value\" align=\"left\" balign=\"left\">false</td></tr></table></td></tr></table>>, shape=folder, fillcolor=\"#E8F5E9\", style=filled, color=\"#388E3C\", peripheries=2];\n  \"BaseProcessor\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>BaseProcessor</b> <i>&lt;task&gt;</i> <i>@Abstract</i></td></tr><tr><td align=\"left\">Base processor class</td></tr><tr><td><table border=\"0\" cellborder=\"1\" cellspacing=\"0\" cellpadding=\"2\" align=\"left\"><tr><td port=\"version__key\" align=\"left\" balign=\"left\">version : string</td><td port=\"version__value\" align=\"left\" balign=\"left\">1</td></tr></table></td></tr><tr><td align=\"left\" bgcolor=\"#FFCCCC\"><font point-size=\"8\"><b>ðŸ”´ 1 issue</b><br/>Type mismatch: expected string, got number. Expect...<br/></font></td></tr></table>>, shape=egg, fillcolor=\"#E3F2FD\", style=\"filled,dashed\", color=\"#1976D2\", penwidth=3, color=\"#D32F2F\"];\n  \"DatabaseService\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>DatabaseService</b> <i>&lt;task&gt;</i> <i>@Singleton</i></td></tr><tr><td align=\"left\">Database connection service</td></tr></table>>, shape=box, fillcolor=\"#E3F2FD\", style=filled, color=\"#1976D2\", peripheries=2];\n  \"serviceConfig\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>serviceConfig</b> <i>&lt;context&gt;</i> <i>@Singleton</i></td></tr><tr><td><table border=\"0\" cellborder=\"1\" cellspacing=\"0\" cellpadding=\"2\" align=\"left\"><tr><td port=\"connectionString__key\" align=\"left\" balign=\"left\">connectionString : string</td><td port=\"connectionString__value\" align=\"left\" balign=\"left\">localhost:5432</td></tr></table></td></tr></table>>, shape=folder, fillcolor=\"#E8F5E9\", style=filled, color=\"#388E3C\", peripheries=2];\n  \"fetchFromAPI\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>fetchFromAPI</b> <i>&lt;task&gt;</i> <i>@Async</i></td></tr><tr><td align=\"left\">Fetches data from external API</td></tr><tr><td><table border=\"0\" cellborder=\"1\" cellspacing=\"0\" cellpadding=\"2\" align=\"left\"><tr><td port=\"endpoint__key\" align=\"left\" balign=\"left\">endpoint : string</td><td port=\"endpoint__value\" align=\"left\" balign=\"left\">{{ appConfig.apiUrl }}</td></tr></table></td></tr></table>>, shape=box, fillcolor=\"#E3F2FD\", style=filled, color=\"#1976D2\"];\n  \"validatePayment\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>validatePayment</b> <i>&lt;task&gt;</i> <i>@Critical</i></td></tr><tr><td align=\"left\">Critical payment validation step</td></tr></table>>, shape=box, fillcolor=\"#E3F2FD\", style=filled, color=\"#1976D2\", penwidth=3];\n  \"oldProcessor\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>oldProcessor</b> <i>&lt;task&gt;</i> <i>@Deprecated(\"Use transformData instead\")</i></td></tr><tr><td align=\"left\">Legacy processor - do not use</td></tr></table>>, shape=box, fillcolor=\"#E3F2FD\", style=\"filled,dashed\", color=\"#1976D2\", fontcolor=\"#999999\"];\n  \"SpecificProcessor\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>SpecificProcessor</b> <i>&lt;task&gt;</i></td></tr><tr><td align=\"left\">Concrete implementation</td></tr></table>>, shape=box, fillcolor=\"#E3F2FD\", style=filled, color=\"#1976D2\"];\n  \"useConfig\" [label=<<table border=\"0\" cellborder=\"0\" cellspacing=\"0\" cellpadding=\"4\"><tr><td align=\"left\"><b>useConfig</b> <i>&lt;task&gt;</i></td></tr><tr><td><table border=\"0\" cellborder=\"1\" cellspacing=\"0\" cellpadding=\"2\" align=\"left\"><tr><td port=\"apiCall__key\" align=\"left\" balign=\"left\">apiCall : string</td><td port=\"apiCall__value\" align=\"left\" balign=\"left\">Call {{ appConfig.apiUrl }}</td></tr><tr><td port=\"debugMode__key\" align=\"left\" balign=\"left\">debugMode : boolean</td><td port=\"debugMode__value\" align=\"left\" balign=\"left\">false</td></tr></table></td></tr></table>>, shape=box, fillcolor=\"#E3F2FD\", style=filled, color=\"#1976D2\"];\n\n  // Edges\n  \"BaseProcessor\" -> \"SpecificProcessor\" [arrowhead=empty, dir=back, labelOverlay=\"75%\", labelhref=\"#srcLineTBD\"];\n  \"start\" -> \"processData\" [labelOverlay=\"75%\", labelhref=\"#srcLineTBD\"];\n  \"processData\" -> \"DataReady\" [labelOverlay=\"75%\", labelhref=\"#srcLineTBD\"];\n  \"DataReady\" -> \"transformData\" [labelOverlay=\"75%\", labelhref=\"#srcLineTBD\"];\n  \"transformData\" -> \"Complete\" [labelOverlay=\"75%\", labelhref=\"#srcLineTBD\"];\n\n  // Validation Warnings\n  \"warning_BaseProcessor_0\" [label=<ðŸ”´ Type mismatch: expected string, got<br/>number. Expected string, received number>, shape=note, fillcolor=\"#FFCCCC\", style=filled, fontsize=9];\n  \"warning_BaseProcessor_0\" -> \"BaseProcessor\" [style=dashed, color=\"#999999\", arrowhead=none];\n\n  // Inferred Dependencies\n  \"fetchFromAPI\" -> \"appConfig\" [label=\"reads endpoint\", style=dashed, color=blue];\n  \"useConfig\" -> \"appConfig\" [label=\"reads apiCall\", style=dashed, color=blue];\n}",
  "svgHash": "9597d787f06c24eb4627edf3a2cbb75122dc6a33b496c8367d27df520322c52b"
}